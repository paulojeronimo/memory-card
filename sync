#!/bin/bash
DEBUG=${DEBUG:-false}
$DEBUG && set -x || set +x
set -e

BASE_DIR=`cd $(dirname "$0"); pwd`

CONFIG=$BASE_DIR/config
[ -f "$CONFIG" ] || CONFIG=$CONFIG.sample
source "$CONFIG" || exit $?

_remove_unwanted() {
  find -L . -type f \( -name .DS_Store -o -name '._*' \) -print0 | xargs -0 rm
}

_create_dirs() {
  local line
  local dir
  local link

  mkdir -p files && cd $_

  for line in "${DIRS[@]}"
  do
    dir=$(echo "$line"|cut -d'|' -f1)
    link=$(echo "$line"|cut -d'|' -f2)
    # http://bit.ly/2n9vYe1
    [ ${dir:0:1} = \~ ] && dir=${dir/#\~/$HOME} || true
    [ -d "$dir" ] || mkdir -p "$dir"
    [ -L "$link" ] || ln -s "$dir" "$link"
  done
}

_rsync() {
  rsync -r -L --progress --modify-window=1 --size-only --update --delete "$@"
}

_sync() {
  local direction=$1
  local d

  _remove_unwanted
  _create_dirs

  if ! [ -d "$MC_DIR" ]
  then
    echo "Directory \"$MC_DIR\" not found (or mounted)!"
    exit 1
  fi

  # Syncronized files include symbolic links and dirs (inside $MC_DIR/files) 
  for d in $(find . -maxdepth 1 \( \( -type l -o -type d \) -a ! -name . \))
  do
    d=`basename $d`
    cd $d
    case $direction in
      to) _rsync . $MC_DIR/$d/;;
      from) _rsync $MC_DIR/$d/* .
    esac
    cd - &> /dev/null
  done
}

main() {
  local op=$1

  cd "$BASE_DIR"

  # http://bit.ly/2moGr6N
  if [[ $op =~ ^(to|from)$ ]]
  then
    _sync $op
    exit $?
  fi

  if ! type _$op &> /dev/null
  then
    echo "Usage: `basename $0` <remove_unwanted|create_dirs|to|from>"
    exit
  fi

  shift || true
  _$op "$@"
}

main "$@"
